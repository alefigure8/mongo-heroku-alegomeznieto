{"version":3,"file":"js/bundle.js","mappings":"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","sources":["webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/lang/en_US.js","webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/lang/zh_CN.js","webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/register.js","webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/utils/date.js","webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/index.js","webpack://mongodb_atlas_heroku/./frontend/UI.js","webpack://mongodb_atlas_heroku/./frontend/services/BookServices.js","webpack://mongodb_atlas_heroku/./node_modules/timeago.js/esm/format.js","webpack://mongodb_atlas_heroku/./frontend/app.js"],"sourcesContent":["var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","import BookService from \"./services/BookServices\";\r\nimport { format } from 'timeago.js';\r\nconst bookServices = new BookService();\r\n\r\nclass UI { //Maneja elementos del DOM\r\n\r\n    async renderBook() { //Mostrar datos en pantalla\r\n        const books = await bookServices.getBooks();\r\n        const bookCardsContainer = document.querySelector('#book-cards');\r\n        bookCardsContainer.innerHTML = '';\r\n        books.reverse().forEach(book => { //Book cards \r\n            const { title, author, isbn, imagePath, _id, createdAt } = book;\r\n            const div = document.createElement('div')\r\n            div.className = '';\r\n            div.innerHTML = `\r\n                <div class=\"card m-2\">\r\n                    <div class=\"row my-4\">\r\n                        <div class=\"col-md-4\">\r\n                        <img src=\"${imagePath}\" class=\"img-fluid\"/>\r\n                        </div>\r\n                        <div class=\"col-md-8\">\r\n                            <div class=\"card-block px-2\">\r\n                                <h4 class=\"card-title\">${title}</h4>\r\n                                <p class=\"card-text\">Author: ${author}</p>\r\n                                <p>ISBN: ${isbn}</p>\r\n                                <a href=\"#\" class=\"btn btn-danger delete\" _id=\"${_id}\">X</a>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        Created: ${format(createdAt)}\r\n                    </div>\r\n                </div>\r\n            `\r\n            bookCardsContainer.appendChild(div);\r\n        });\r\n    }\r\n\r\n    async addNayBook(book) {\r\n        await bookServices.postBooks(book); //Pasa el objeto del formulario al serviceBook\r\n        this.clearBookForm();\r\n        this.renderBook();\r\n    }\r\n\r\n    clearBookForm() { //Resetea formulario\r\n        document.querySelector('#book-form').reset();\r\n    }\r\n\r\n    renderMessage(message, colorMessage, secondsToRemove) {\r\n        const div = document.createElement('div');\r\n        div.classList.add('alert', `alert-${colorMessage}`, 'text-center');\r\n        div.appendChild(document.createTextNode(message))\r\n        const container = document.querySelector('.col-md-4')\r\n        const bookForm = document.querySelector('#book-form');\r\n\r\n        container.insertBefore(div, bookForm)\r\n\r\n        setTimeout(() => {\r\n            div.remove()\r\n        }, secondsToRemove);\r\n    }\r\n\r\n\r\n    async deleteBook(bookId) {\r\n        await bookServices.deleteBooks(bookId)\r\n        this.renderBook();\r\n    }\r\n\r\n}\r\n\r\nexport default UI;","class BookService {\r\n    constructor() {\r\n        this.uri = 'http://localhost:3000/api/books';\r\n    }\r\n\r\n    async getBooks() { //Get Fetch\r\n        const response = await fetch(this.uri);\r\n        const books = await response.json();\r\n        return books;\r\n    };\r\n\r\n    async postBooks(book) { //Post Fetch\r\n        const response = await fetch(this.uri, {\r\n            method: 'POST',\r\n            body: book\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    };\r\n\r\n    async deleteBooks(bookId) { //Delete fetch\r\n        const response = await fetch(`${this.uri}/${bookId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    };\r\n};\r\n\r\nexport default BookService;","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","import './styles/app.css';\r\nimport UI from './UI.js'\r\n\r\n//Variables\r\nconst bookForm = document.querySelector('#book-form')\r\n\r\n//DOM Content Loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const ui = new UI();\r\n    ui.renderBook();\r\n})\r\n\r\n//Listener\r\nbookForm.addEventListener('submit', e => {\r\n    e.preventDefault()\r\n\r\n    const title = bookForm['title'].value;\r\n    const author = bookForm['author'].value;\r\n    const isbn = bookForm['isbn'].value;\r\n    const image = bookForm['image'].files;\r\n\r\n    //Validation\r\n    if (title === '' || author === '' || isbn === '' || image.length === 0) {\r\n        console.log('falta informacion');\r\n        return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image[0]); //Pasa una sola imagen\r\n    formData.append('title', title);\r\n    formData.append('author', author);\r\n    formData.append('isbn', isbn);\r\n\r\n    const ui = new UI();\r\n    ui.addNayBook(formData);\r\n\r\n    ui.renderMessage('Book added', 'success', 3000)\r\n})\r\n\r\n//Delete\r\ndocument.querySelector('#book-cards')\r\n    .addEventListener('click', e => {\r\n        e.preventDefault()\r\n        if (e.target.classList.contains('delete')) {\r\n            const ui = new UI();\r\n            ui.deleteBook(e.target.getAttribute('_id'))\r\n            ui.renderMessage('Book removed', 'danger', 2000)\r\n        }\r\n    })"],"names":["EN_US","ZH_CN","Locales","register","locale","func","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","diff","idx","unit","Math","floor","bookServices","constructor","this","uri","response","fetch","json","book","method","body","data","console","log","bookId","headers","books","getBooks","bookCardsContainer","document","querySelector","innerHTML","reverse","forEach","title","author","isbn","imagePath","_id","createdAt","div","createElement","date","opts","className","localeFunc","agoIn","totalSec","abs","length","toString","relativeDate","appendChild","postBooks","clearBookForm","renderBook","reset","renderMessage","message","colorMessage","secondsToRemove","classList","add","createTextNode","container","bookForm","insertBefore","setTimeout","remove","deleteBooks","addEventListener","e","preventDefault","value","image","files","formData","FormData","append","ui","addNayBook","target","contains","deleteBook","getAttribute"],"sourceRoot":""}