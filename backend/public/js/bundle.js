(()=>{"use strict";var e=["second","minute","hour","day","week","month","year"],t=["秒","分钟","小时","天","周","个月","年"],o={},n=function(e,t){o[e]=t},a=[60,60,24,7,365/7/12,12];function r(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):(e=(e||"").trim().replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))}n("en_US",(function(t,o){if(0===o)return["just now","right now"];var n=e[Math.floor(o/2)];return t>1&&(n+="s"),[t+" "+n+" ago","in "+t+" "+n]})),n("zh_CN",(function(e,o){if(0===o)return["刚刚","片刻后"];var n=t[~~(o/2)];return[e+" "+n+"前",e+" "+n+"后"]}));const s=new class{constructor(){this.uri="http://localhost:3000/api/books"}async getBooks(){const e=await fetch(this.uri);return await e.json()}async postBooks(e){const t=await fetch(this.uri,{method:"POST",body:e}),o=await t.json();console.log(o)}async deleteBooks(e){const t=await fetch(`${this.uri}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"}),o=await t.json();console.log(o)}},c=class{async renderBook(){const e=await s.getBooks(),t=document.querySelector("#book-cards");t.innerHTML="",e.reverse().forEach((e=>{const{title:n,author:s,isbn:c,imagePath:d,_id:i,createdAt:l}=e,u=document.createElement("div");var m,h,p;u.className="",u.innerHTML=`\n                <div class="card m-2">\n                    <div class="row my-4">\n                        <div class="col-md-4">\n                        <img src="${d}" class="img-fluid"/>\n                        </div>\n                        <div class="col-md-8">\n                            <div class="card-block px-2">\n                                <h4 class="card-title">${n}</h4>\n                                <p class="card-text">Author: ${s}</p>\n                                <p>ISBN: ${c}</p>\n                                <a href="#" class="btn btn-danger delete" _id="${i}">X</a>\n                            </div>\n                        </div> \n                    </div>\n                    <div class="card-footer">\n                        Created: ${m=l,function(e,t){for(var o=e<0?1:0,n=e=Math.abs(e),r=0;e>=a[r]&&r<a.length;r++)e/=a[r];return(e=Math.floor(e))>(0==(r*=2)?9:1)&&(r+=1),t(e,r,n)[o].replace("%s",e.toString())}(function(e,t){return(+(t?r(t):new Date)-+r(e))/1e3}(m,p&&p.relativeDate),function(e){return o[e]||o.en_US}(h))}\n                    </div>\n                </div>\n            `,t.appendChild(u)}))}async addNayBook(e){await s.postBooks(e),this.clearBookForm(),this.renderBook()}clearBookForm(){document.querySelector("#book-form").reset()}renderMessage(e,t,o){const n=document.createElement("div");n.classList.add("alert",`alert-${t}`,"text-center"),n.appendChild(document.createTextNode(e));const a=document.querySelector(".col-md-4"),r=document.querySelector("#book-form");a.insertBefore(n,r),setTimeout((()=>{n.remove()}),o)}async deleteBook(e){await s.deleteBooks(e),this.renderBook()}},d=document.querySelector("#book-form");document.addEventListener("DOMContentLoaded",(()=>{(new c).renderBook()})),d.addEventListener("submit",(e=>{e.preventDefault();const t=d.title.value,o=d.author.value,n=d.isbn.value,a=d.image.files;if(""===t||""===o||""===n||0===a.length)return void console.log("falta informacion");const r=new FormData;r.append("image",a[0]),r.append("title",t),r.append("author",o),r.append("isbn",n);const s=new c;s.addNayBook(r),s.renderMessage("Book added","success",3e3)})),document.querySelector("#book-cards").addEventListener("click",(e=>{if(e.preventDefault(),e.target.classList.contains("delete")){const t=new c;t.deleteBook(e.target.getAttribute("_id")),t.renderMessage("Book removed","danger",2e3)}}))})();
//# sourceMappingURL=bundle.js.map